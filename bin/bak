#!/bin/bash
error() { echo "$1" >&2; exit 1; }
verbose() { [[ $VERBOSE ]] && echo "$1" >&2; }
ask() {
    while true; do
        read -p "$1 ([y]/n) " -r
        REPLY=${REPLY:-"y"}
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            return 1
        elif [[ $REPLY =~ ^[Nn]$ ]]; then
            return 0
        fi
    done
}

usage() {
    echo "Backup Util by jkpark"
    echo ""
    echo "Usage $(basename $0) [OPTION] [command] TARRGET..."
    echo ""
    echo "OPTIONS:"
    echo "    -d dir      backup to selected directory"
    echo "    -f          Force. do not prompt before execution"
    echo "    -v          explain what is being done"
    echo ""
    echo "command:"
    echo "    -rm-all     Remove All backups"
    echo ""
}

while getopts ":fvd:" opt; do
    case "$opt" in
        f) FORCE=1 ;;
        v) VERBOSE="-v" ;;
        *) echo "Wrong Option!" >&2
            usage
            exit 1
    esac
done

shift $((OPTIND - 1))

# Check that any targets after parsing opts
if [ $# == 0 ] ; then
	usage
	exit 1
fi

DEST="$1.bak"
[[ $# == 2 ]] && DEST="$2/$1.bak"


if [[ -f $DEST ]] || [[ -d $DEST ]]; then
    if [[ ! $FORCE ]]; then
        NEXT=2
        while [[ -f $DEST$NEXT ]] || [[ -d $DEST$NEXT ]]; do
            ((NEXT++))
        done
        DEST=$DEST$NEXT
    else # FORED! Remove.
        rm -rf $VERBOSE $DEST
    fi 
fi

[[ ! $VERBOSE ]] && echo "$1 -> $DEST"

cp -fr $VERBOSE $1 $DEST

